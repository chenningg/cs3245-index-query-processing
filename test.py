import pickle
import os
import nltk

ps = nltk.stem.PorterStemmer()


def write_to_disk():

    # writeout_chunk -> dictionary, posting_list

    # for posting_list in posting_lists:
    #     getfinalbyteoffsetofpostings.txttoappendtoendoffile
    #     --> add in pointer to dictionary
    #     add posting_list into the postings.txt
        

    # load in dictionary.txt
    # add in newwords to dictionary.txt 
    
    # {   
    #     "word": word_to_merge,
    #     "doc_freq" : doc_freq,
    #     "posting_list": posting_list_to_merge,
    #     "pointer": None
    # }


    # open our dictionary and postings file
    # open does not mean load into memory 
    f_dict = open(
        os.path.join(os.path.dirname(__file__), "dictionary.txt"), "rb"
    )
    
    dictionary = pickle.load(f_dict)
    all_doc_len = 7769

    for word in ["then", "there"]:
        try:
            print(dictionary[ps.stem(word)]["doc_freq"])
        except:
            print(0)

    
    doc_ids_file = "doc_ids"
    f_doc_ids = open(os.path.join(os.path.dirname(__file__), doc_ids_file), "rb")
    all_doc_ids = pickle.load(f_doc_ids)
    
    a = ['^14', 47, 136, 144, 200, 302, 331, 489, 502, 903, 925, 926, 942, 969, '^28', 1197, 1306, 1312, 1421, 1579, 1777, 1904, 1926, 1967, 2074, 2175, 2228, 2354, '^42', 2375, 2470, 2475, 2513, 2725, 2764, 2775, 2799, 2813, 2864, 2968, 3007, 3020, '^56', 3043, 3062, 3086, 3390, 3430, 3454, 3463, 3493, 3534, 4061, 4075, 4232, 4267, '^70', 4429, 4470, 4552, 4593, 4636, 4664, 4689, 4714, 4806, 4882, 4988, 5167, 5234, '^84', 5241, 5258, 5273, 5318, 5382, 5412, 5443, 5445, 5954, 6083, 6197, 6407, 6588, '^98', 6716, 6784, 6869, 6882, 6914, 7103, 7135, 7304, 7326, 7367, 7471, 7632, 7792, '^112', 7802, 7816, 7872, 7927, 8029, 8060, 8166, 8415, 8518, 8522, 8571, 8578, 8588, '^126', 8607, 8618, 8628, 8658, 8666, 8670, 8710, 8796, 8961, 8974, 9058, 9134, 9190, '^140', 9206, 9220, 9345, 9470, 9526, 9604, 9617, 9667, 9764, 9793, 9971, 9978, 10005, '^154', 10355, 10403, 10553, 10633, 10809, 10887, 11213, 11234, 11352, 11399, 11461, 11746, 11768, '^168', 11839, 11852, 11863, 12011, 12073, 12136, 12209, 12390, 12465, 12751, 13115, 13124, 13168, 13247, 13524, 13531, 13735, 14055, 14199, 14434]
    b = ['^27', 1, 45, 47, 49, 106, 109, 147, 179, 180, 199, 200, 203, 211, 227, 236, 237, 242, 246, 247, 248, 254, 259, 302, 311, 330, 353, '^54', 356, 362, 368, 374, 475, 502, 504, 748, 754, 768, 856, 873, 889, 890, 894, 925, 952, 955, 969, 974, 977, 1019, 1078, 1094, 1100, 1110, '^81', 1185, 1201, 1207, 1212, 1226, 1269, 1272, 1299, 1300, 1306, 1312, 1332, 1350, 1477, 1478, 1499, 1503, 1533, 1535, 1575, 1579, 1611, 1656, 1682, 1724, 1761, '^108', 1772, 1792, 1809, 1836, 1848, 1858, 1862, 1886, 1918, 1933, 1963, 1975, 2001, 2006, 2025, 2056, 2061, 2074, 2087, 2121, 2128, 2130, 2175, 2190, 2203, 2228, '^135', 2257, 2278, 2310, 2352, 2367, 2375, 2383, 2448, 2475, 2508, 2521, 2553, 2554, 2570, 2596, 2606, 2618, 2623, 2633, 2652, 2697, 2709, 2725, 2767, 2775, 2777, '^162', 2792, 2799, 2819, 2828, 2851, 2881, 2924, 2930, 2944, 2955, 2958, 2959, 2968, 2971, 2974, 3019, 3028, 3031, 3065, 3094, 3115, 3121, 3129, 3142, 3155, 3187, '^189', 3192, 3204, 3210, 3217, 3242, 3261, 3267, 3292, 3322, 3327, 3329, 3332, 3338, 3364, 3386, 3390, 3394, 3396, 3429, 3441, 3446, 3449, 3455, 3488, 3490, 3492, '^216', 3528, 3535, 3553, 3571, 3593, 3597, 3862, 3864, 3869, 3892, 3957, 3981, 3984, 4031, 4052, 4067, 4071, 4097, 4101, 4122, 4127, 4156, 4165, 4174, 4267, 4275, '^243', 4290, 4315, 4340, 4345, 4356, 4392, 4405, 4407, 4431, 4470, 4477, 4490, 4513, 4518, 4541, 4548, 4599, 4602, 4603, 4625, 4630, 4632, 4662, 4664, 4692, 4713, '^270', 4714, 4735, 4739, 4744, 4781, 4785, 4816, 4824, 4898, 4903, 4944, 4953, 4988, 5057, 5070, 5109, 5113, 5127, 5150, 5152, 5160, 5167, 5171, 5176, 5201, 5205, '^297', 5206, 5214, 5215, 5226, 5258, 5270, 5271, 5273, 5288, 5290, 5315, 5318, 5345, 5363, 5376, 5392, 5467, 5473, 5505, 5554, 5561, 5570, 5639, 5690, 5702, 5706, '^324', 5752, 5761, 5778, 5786, 5789, 5800, 5827, 5833, 5835, 5847, 5849, 5858, 5868, 5895, 5985, 5998, 6025, 6058, 6060, 6083, 6086, 6091, 6108, 6119, 6125, 6127, '^351', 6156, 6157, 6169, 6184, 6197, 6217, 6267, 6296, 6326, 6337, 6338, 6344, 6346, 6350, 6357, 6373, 6400, 6404, 6426, 6432, 6492, 6493, 6531, 6543, 6576, 6603, '^378', 6606, 6652, 6657, 6665, 6689, 6716, 6722, 6748, 6752, 6770, 6811, 6844, 6876, 6890, 6903, 6908, 6914, 6922, 6935, 6944, 6945, 7011, 7013, 7024, 7032, 7036, '^405', 7043, 7066, 7088, 7103, 7126, 7130, 7159, 7161, 7167, 7177, 7196, 7240, 7263, 7304, 7308, 7312, 7326, 7355, 7356, 7357, 7366, 7375, 7391, 7423, 7428, 7429, '^432', 7471, 7499, 7500, 7512, 7552, 7566, 7579, 7606, 7609, 7625, 7628, 7629, 7645, 7659, 7710, 7716, 7742, 7888, 7907, 7917, 7927, 7972, 8008, 8020, 8029, 8039, '^459', 8044, 8069, 8088, 8098, 8115, 8160, 8161, 8168, 8179, 8210, 8273, 8400, 8421, 8438, 8440, 8441, 8446, 8506, 8516, 8535, 8561, 8569, 8574, 8592, 8598, 8613, '^486', 8618, 8628, 8630, 8635, 8638, 8662, 8666, 8667, 8688, 8696, 8714, 8735, 8746, 8845, 8854, 8877, 8882, 8940, 8943, 8944, 8945, 8950, 8991, 9022, 9025, 9055, '^513', 9058, 9069, 9075, 9110, 9170, 9206, 9242, 9253, 9328, 9336, 9454, 9470, 9505, 9549, 9559, 9582, 9592, 9617, 9628, 9657, 9667, 9749, 9763, 9764, 9770, 9782, '^540', 9784, 9793, 9795, 9821, 9848, 9864, 9892, 9923, 9959, 9975, 10078, 10080, 10091, 10095, 10100, 10122, 10124, 10139, 10168, 10172, 10246, 10255, 10264, 10306, 10395, 10445, '^567', 10455, 10494, 10530, 10531, 10537, 10545, 10546, 10553, 10569, 10582, 10593, 10617, 10621, 10622, 10623, 10627, 10633, 10636, 10643, 10665, 10684, 10689, 10695, 10703, 10705, 10720, '^594', 10737, 10738, 10760, 10762, 10771, 10780, 10781, 10805, 10830, 10876, 10902, 10931, 10959, 11000, 11071, 11085, 11100, 11123, 11149, 11198, 11224, 11243, 11254, 11265, 11279, 11314, '^621', 11330, 11491, 11541, 11545, 11555, 11575, 11739, 11746, 11753, 11768, 11769, 11773, 11776, 11783, 11820, 11831, 11843, 11844, 11863, 11866, 11970, 12054, 12073, 12121, 12135, 12136, '^648', 12146, 12152, 12179, 12203, 12209, 12213, 12216, 12261, 12270, 12298, 12325, 12327, 12396, 12399, 12447, 12457, 12472, 12473, 12489, 12504, 12760, 12763, 12768, 12770, 12774, 12775, '^675', 12778, 12806, 12848, 12857, 12861, 12891, 12917, 12923, 12924, 12965, 12971, 13024, 13046, 13053, 13115, 13120, 13157, 13210, 13243, 13244, 13256, 13261, 13266, 13531, 13649, 13946, 13949, 13994, 14109, 14212, 14270, 14293, 14418, 14544, 14688, 14698, 14757, 14767, 14770, 14818]

    c = []
    d = []
    for val in a:
        if isinstance(val, int):
            c.append(val)


    for val in b:
        if isinstance(val, int):
            d.append(val)     

    f = []
    g = []
    for doc_id in all_doc_ids: 
        if doc_id not in c:
            f.append(doc_id)
        if doc_id not in d:
            g.append(doc_id)



    print(len(set.intersection(set(f), set(g))))



    
    # f_postings = open(
    #     os.path.join(os.path.dirname(__file__), "postings.txt"), "rb"
    # )

    # count = 0
    # while True:
    #     try:
    #         postings = pickle.load(f_postings)
    #         if count == 3:
    #         # if count == 2:
    #             print(postings)
    #         count += 1
    #     except:
    #         break
    # print(count)

    # print(isinstance('^18', str))

    






        
    
    return

write_to_disk()